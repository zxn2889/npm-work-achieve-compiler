function e(e){return function(e){const t=function(e){const t=1,n=2,o=3,i=4,l=5,c=6,r=[];let u=[],h=t;function s(e){const t=e.charCodeAt();return t>=65&&t<=90||t>=97&&t<=122||/^[\u4E00-\u9FA5]+$/.test(e)||/\s/.test(e)||/\w/.test(e)||"."===e}for(let d=0;d<e.length;d++){const f=e[d];if("<"!==f){if(s(f)){if(u.push(f),h===n){h=o;continue}if(h===t){h=i;continue}if(h===l){h=c;continue}}else if(">"===f){if(h===o){r.push({type:"startTag",tag:u.join("")}),u.length=0,h=t;continue}if(h===c){r.push({type:"endTag",tag:u.join("")}),u.length=0,h=t;continue}}else if("/"===f){h=l;continue}}else h===i&&(r.push({type:"text",content:u.join("")}),u.length=0),h=n}return r}(e),n={type:"Root",children:null},o=[],i=[];for(let e=0;e<t.length;e++){const n=t[e],l=n.type;if("startTag"===l){const e={type:"Element",tag:n.tag,children:[]},t=i[i.length-1];t?t.children.push(e):o.push(e),i.push(e)}else if("endTag"===l)i.pop();else if("text"===l){const e={type:"Text",content:n.content},t=i[i.length-1];t?t.children.push(e):o.push(eleNode)}}return n.children=o,n}(e)}let t=null;function n(e,n=[]){const c={currentNode:null,childIndex:null,parentNode:null,funcs:n,removeASTNode:()=>l.call(c),replaceASTNode:e=>i.call(c,e)};!function(e){t=e}(c),o(e,c)}function o(e,t){t.currentNode=e;const n=e,i=t.funcs;if(i.length)for(let e=0;e<i.length;e++)if(i[e](n,t),!n)return;const l=n.children;if(l)for(let e=0;e<l.length;e++)t.childIndex=e,t.parentNode=n,o(l[e],t)}function i(e){this.parentNode&&(this.currentNode=e,this.parentNode.children[this.childIndex]=e)}function l(){this.parentNode&&(this.parentNode.children.splice(this.childIndex,1),this.currentNode=null)}function c(e,t=[]){n(e,t)}function r(){return t}function u(e,t=0){const n=e.type,o="Root"===n?"":"Element"===n?e.tag:e.content;if(console.log(`${"-".repeat(t)}${n}:${o}`),e.children)for(let n=0;n<e.children.length;n++)u(e.children[n],t+2)}export{c as createOptimizeParser,e as createParser,u as dump,r as getCurrentContext};
