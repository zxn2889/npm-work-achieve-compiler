!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).achieve={})}(this,(function(e){"use strict";function t(e,t){return()=>{"Text"===e.type&&(e.jsNode={type:"Text",context:e.content})}}function n(e,t){return()=>{if("Element"!==e.type)return;const t=function(e){return{type:"TagNode",name:e}}(e.tag),n={type:"CallExpression",id:(o="h",{type:"Identifier",name:o}),nodes:[t]};var o;1===e.children.length?n.nodes.push(e.children[0].jsNode):n.nodes.push(function(e){return{type:"ArrayParamsNode",params:e}}(e.children.map((e=>e.jsNode)))),e.jsNode=n}}function o(e,t){return()=>{if("Root"!==e.type)return;const t=e.children[0].jsNode;e.jsNode={type:"FunctionDecl",id:{type:"Identifier",name:"render"},params:[],body:[{type:"ReturnStatement",return:t}]}}}let i=null;function r(e,r=[]){const u={currentNode:null,childIndex:null,parentNode:null,funcs:[t,n,o].concat(r),removeASTNode:()=>s.call(u),replaceASTNode:e=>l.call(u,e)};!function(e){i=e}(u),c(e,u)}function c(e,t){t.currentNode=e;const n=e,o=t.funcs,i=[];if(o.length)for(let e=0;e<o.length;e++){const r=o[e](n,t);if(r&&i.push(r),!n)return}const r=n.children;if(r)for(let e=0;e<r.length;e++)t.childIndex=e,t.parentNode=n,c(r[e],t);if(i.length)for(let e=0;e<i.length;e++)i[e]()}function l(e){this.parentNode&&(this.currentNode=e,this.parentNode.children[this.childIndex]=e)}function s(){this.parentNode&&(this.parentNode.children.splice(this.childIndex,1),this.currentNode=null)}e.createOptimizeParser=function(e,t=[]){r(e,t)},e.createParser=function(e){return function(e){const t=function(e){const t=1,n=2,o=3,i=4,r=5,c=6,l=[];let s=[],u=t;function d(e){const t=e.charCodeAt();return t>=65&&t<=90||t>=97&&t<=122||/^[\u4E00-\u9FA5]+$/.test(e)||/\s/.test(e)||/\w/.test(e)||"."===e}for(let f=0;f<e.length;f++){const h=e[f];if("<"!==h){if(d(h)){if(s.push(h),u===n){u=o;continue}if(u===t){u=i;continue}if(u===r){u=c;continue}}else if(">"===h){if(u===o){l.push({type:"startTag",tag:s.join("")}),s.length=0,u=t;continue}if(u===c){l.push({type:"endTag",tag:s.join("")}),s.length=0,u=t;continue}}else if("/"===h){u=r;continue}}else u===i&&(l.push({type:"text",content:s.join("")}),s.length=0),u=n}return l}(e),n={type:"Root",children:null},o=[],i=[];for(let e=0;e<t.length;e++){const n=t[e],r=n.type;if("startTag"===r){const e={type:"Element",tag:n.tag,children:[]},t=i[i.length-1];t?t.children.push(e):o.push(e),i.push(e)}else if("endTag"===r)i.pop();else if("text"===r){const e={type:"Text",content:n.content},t=i[i.length-1];t?t.children.push(e):o.push(eleNode)}}return n.children=o,n}(e)},e.dump=function e(t,n=0){const o=t.type,i="Root"===o?"":"Element"===o?t.tag:t.content;if(console.log(`${"-".repeat(n)}${o}:${i}`),t.children)for(let o=0;o<t.children.length;o++)e(t.children[o],n+2)},e.getCurrentContext=function(){return i}}));
